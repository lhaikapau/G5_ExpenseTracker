@model ASI.Basecode.Services.ServiceModels.ExpenseViewModel

@{
    ViewData["Title"] = "Create";
}
<div class="create-container">
    <div class="create-card">
    <h1>Create Expense</h1>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Amount" class="control-label"></label>
                    <input asp-for="Amount" class="form-control" />
                    <span asp-validation-for="Amount" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateCreated" class="control-label"></label>
                    <input asp-for="DateCreated" class="form-control" type="date" /> <!-- Date Picker -->
                    <span asp-validation-for="DateCreated" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label"></label>
                    <select asp-for="CategoryId" class="form-control" id="categoryDropdown">
                        <option value="">-- Select Category --</option>
                        <!-- Options will be populated here dynamically -->
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
         <a asp-action="Index" class="btn btn-primary">Back</a>
    </div>
</div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            const apiUrl = '@Url.Action("RetrieveCategoriesFromUserId", "Category")';
            fetch(apiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const categoryDropdown = $('#categoryDropdown');
                    data.forEach(category => {
                        const option = $('<option></option>').val(category.categoryId).text(category.name);
                        categoryDropdown.append(option);
                    });
                })
                .catch(error => {
                    console.error('Error fetching categories:', error);
                });
        });
    </script>
}
