@model ASI.Basecode.Services.ServiceModels.ExpenseViewModel

@{
    ViewData["Title"] = "Edit Page";
}
<h1>Create</h1>

<h4>Sample Data</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <input type="hidden" asp-for="ExpenseId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <div class="input-group">
                    <input asp-for="CategoryId" id="CategoryId" type="hidden" />
                    <input id="lblCategory" class="form-control" readonly value="@Model.Name" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-secondary" onclick="selectCategory()">Select</button>
                    </div>
                </div>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Category Selection Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" role="dialog" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryModalLabel">Select a Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Category Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="categoryTableBody">
                        <!-- Categories will be dynamically loaded here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        function selectCategory() {
            $('#categoryModal').modal('show');
        }


        function selectCategoryId(id, name) {
            // Set the selected category ID in the input field
            $('#CategoryId').val(id);
            $('#lblCategory').val(name);
            // Close the modal
            $('#categoryModal').modal('hide');
        }

        $(document).ready(function () {
            const apiUrl = '@Url.Action("RetrieveCategoriesFromUserId", "Category")';
            fetch(apiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    var categoryTableBody = $('#categoryTableBody');
                    categoryTableBody.empty();
                    data.forEach(category => {
                        const row = $('<tr></tr>');
                        const idCell = $('<td></td>').text(category.name);
                        const nameCell = $('<td></td>').html(`<button type="button" class="btn btn-primary" onclick="selectCategoryId(${category.categoryId}, '${category.name}')">Select</button>`);

                        row.append(idCell);
                        row.append(nameCell);

                        categoryTableBody.append(row);
                    });
                })
                .catch(error => {
                    console.error('Error fetching categories:', error);
                });
        });
    </script>
}
