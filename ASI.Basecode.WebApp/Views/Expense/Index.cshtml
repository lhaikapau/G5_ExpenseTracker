@model IEnumerable<ASI.Basecode.Services.ServiceModels.ExpenseViewModel>

@{
    ViewData["Title"] = "Expense Page";
    int currentPage = ViewData["CurrentPage"] as int? ?? 1;
    int totalPages = ViewData["TotalPages"] as int? ?? 1;
}

<h1>Expense</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table table-striped table-hover">
<thead class="thead-dark">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>         
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)  // Assuming Categories is a list in the CategoryViewModel
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (item.DateCreated.HasValue)
                    {
                        @item.DateCreated.Value.ToString("yyyy-MM-dd")
                    }
                    else
                    {
                        @string.Empty
                        // or any placeholder text like "N/A"
                    }
                </td>
                <td class="text-center">
                    @Html.ActionLink("Edit", "Edit", new { ExpenseId = item.ExpenseId }, new { @class = "btn btn-sm btn-warning" }) |
                    @Html.ActionLink("Delete", "Delete", new { ExpenseId = item.ExpenseId }, new { @class = "btn btn-sm btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)">Previous</a>
            </li>
        }

        @for (int i = 1; i <= totalPages; i++)
        {
            if (i <= 3 || i > totalPages - 3 || (i >= currentPage - 2 && i <= currentPage + 2))
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                </li>
            }
            else if (i == 4 || i == totalPages - 3)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
        }

        @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)">Next</a>
            </li>
        }

        <!-- Last Page link -->
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@totalPages">Last</a>
            </li>
        }
    </ul>
</nav>

