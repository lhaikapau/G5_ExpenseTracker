@{
    ViewData["Title"] = "Report Page";
}
<div class="page-container">
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

    <!-- Monthly Report Section -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Monthly Expenses</h5>
                    <div class="d-flex justify-content-end">
                        <select id="singleMonthSelect" class="form-select me-2" style="width: auto;">
                            @for (int m = 1; m <= 12; m++)
                            {
                                var isSelected = m == (int?)ViewData["CurrentMonth"];
                                <option value="@m" selected="@isSelected">
                                    @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)
                                </option>
                            }
                        </select>
                        <select id="singleYearSelect" class="form-select" style="width: auto;">
                            @for (int y = DateTime.Now.Year; y >= 2000; y--)
                            {
                                var isSelected = y == (int?)ViewData["CurrentYear"];
                                <option value="@y" selected="@isSelected">@y</option>
                            }
                        </select>
                        <button id="singleMonthFilterButton" class="btn btn-primary ms-2">Filter</button>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="barChart" style="height: 300px;"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Month Comparison Section -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Month-to-Month Comparison</h5>
                    <div class="d-flex justify-content-end">
                        <select id="monthSelect" class="form-select me-2" style="width: auto;">
                            @for (int m = 1; m <= 12; m++)
                            {
                                var isSelected = m == (int?)ViewData["CurrentMonth"];
                                <option value="@m" selected="@isSelected">
                                    @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)
                                </option>
                            }
                        </select>
                        <select id="compareMonthSelect" class="form-select me-2" style="width: auto;">
                            @for (int m = 1; m <= 12; m++)
                            {
                                var isSelected = m == (int?)ViewData["CompareMonth"];
                                <option value="@m" selected="@isSelected">
                                    @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)
                                </option>
                            }
                        </select>
                        <select id="yearSelect" class="form-select" style="width: auto;">
                            @for (int y = DateTime.Now.Year; y >= 2000; y--)
                            {
                                var isSelected = y == (int?)ViewData["CurrentYear"];
                                <option value="@y" selected="@isSelected">@y</option>
                            }
                        </select>
                        <button id="compareButton" class="btn btn-primary ms-2">Compare</button>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="comparisonChart" style="height: 300px;"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Category Breakdown</h5>
                </div>
                <div class="card-body">
                    <div id="categoryList" class="list-group">
                        <!-- Categories will be populated by JavaScript -->
                    </div>
                </div>
            </div>
     </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        try {
            var categoryData = JSON.parse('@Html.Raw(ViewData["CategoryData"])');
            var monthlyCategoryData = JSON.parse('@Html.Raw(ViewData["MonthlyCategoryData"])');
            var comparisonData = JSON.parse('@Html.Raw(ViewData["ComparisonData"])');
            var labels = categoryData.map(item => item.name);
            var dataValues = categoryData.map(item => item.amount);
            var colors = generateColors(categoryData.length);

            // Monthly Bar Chart
            if (monthlyCategoryData && monthlyCategoryData.length > 0) {
                var barLabels = monthlyCategoryData.map(item => item.name);
                var barDataValues = monthlyCategoryData.map(item => item.amount);
                var barColors = generateColors(monthlyCategoryData.length);

                var barCtx = document.getElementById('barChart').getContext('2d');
                new Chart(barCtx, {
                    type: 'bar',
                    data: {
                        labels: barLabels,
                        datasets: [{
                            label: 'Monthly Expenses',
                            data: barDataValues,
                            backgroundColor: barColors.map(color => `rgba(${color}, 0.2)`),
                            borderColor: barColors.map(color => `rgba(${color}, 1)`),
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: { y: { beginAtZero: true } },
                        plugins: {
                            legend: { display: true },
                            title: { display: true, text: 'Monthly Expenses by Category' }
                        }
                    }
                });
            }
            
            // Comparison Chart
            if (comparisonData && comparisonData.length > 0) {
                var comparisonLabels = comparisonData.map(item => item.name);
                var currentMonthData = comparisonData.map(item => item.currentAmount);
                var compareMonthData = comparisonData.map(item => item.compareAmount);
                
                var comparisonCtx = document.getElementById('comparisonChart').getContext('2d');
                new Chart(comparisonCtx, {
                    type: 'bar',
                    data: {
                        labels: comparisonLabels,
                        datasets: [
                            {
                                label: document.getElementById('monthSelect').options[document.getElementById('monthSelect').selectedIndex].text,
                                data: currentMonthData,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            },
                            {
                                label: document.getElementById('compareMonthSelect').options[document.getElementById('compareMonthSelect').selectedIndex].text,
                                data: compareMonthData,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: { beginAtZero: true }
                        },
                        plugins: {
                            legend: { display: true },
                            title: { 
                                display: true, 
                                text: 'Month-to-Month Expense Comparison by Category'
                            }
                        }
                    }
                });
            }

            // Single Month Filter Button
            document.getElementById('singleMonthFilterButton').addEventListener('click', function () {
                var selectedYear = document.getElementById('singleYearSelect').value;
                var selectedMonth = document.getElementById('singleMonthSelect').value;
                window.location.href = `?year=${selectedYear}&month=${selectedMonth}`;
            });

            // Comparison Filter Button
            document.getElementById('compareButton').addEventListener('click', function () {
                var selectedYear = document.getElementById('yearSelect').value;
                var selectedMonth = document.getElementById('monthSelect').value;
                var compareMonth = document.getElementById('compareMonthSelect').value;
                window.location.href = `?year=${selectedYear}&month=${selectedMonth}&compareMonth=${compareMonth}`;
            });

            // Populate category list
            var categoryList = document.getElementById('categoryList');
            categoryData.forEach((category, index) => {
                var color = `rgba(${colors[index]}, 0.2)`;
                var borderColor = `rgba(${colors[index]}, 1)`;

                var listItem = document.createElement('div');
                listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                listItem.style.borderLeft = `4px solid ${borderColor}`;

                listItem.innerHTML = `
                        <div>
                            <h6 class="mb-0">${category.name}</h6>
                            <small class="text-muted">₱${category.amount.toLocaleString()}</small>
                        </div>
                        <span class="badge bg-primary rounded-pill">${category.percentage.toFixed(1)}%</span>
                    `;

                categoryList.appendChild(listItem);
            });

        } catch (error) {
            console.error('Error creating charts:', error);
        }
    });

    function generateColors(count) {
        var colors = [
            '255, 99, 132',
            '54, 162, 235',
            '255, 206, 86',
            '75, 192, 192',
            '153, 102, 255',
            '255, 159, 64'
        ];

        while (colors.length < count) {
            colors.push(`${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}`);
        }

        return colors;
    }
</script>