@using System.Globalization

@{
    ViewData["Title"] = "Trends Report";
}


<body style="background-color: #B3ACDB;">
    <div class="container">
        <div class="row mt-4">
            <div class="col-12">
                <div class="card" style="width: 150%; height: 700px; margin-left: -140px; margin-top: 20px; border: none;">
                    <div class="card-header" style="background-image: linear-gradient(to right, #4b0082, #9370DB); color: white; height: 60px;">
                        <h5 class="card-title mb-0">Trend Expenses Trend</h5>
                        <div class="d-flex justify-content-end">
                            <select id="yearSelect" class="form-select" style="width: auto; margin-top:-25px;">
                                @for (int y = DateTime.Now.Year; y >= 2000; y--)
                                {
                                    var isSelected = y == (int?)ViewData["CurrentYear"];
                                    <option value="@y" selected="@isSelected">@y</option>
                                }
                            </select>
                            <select id="monthSelect" class="form-select" style="width: auto; margin-top:-25px; margin-left: 10px;">
                                <option value="0">All Months</option>
                                @for (int m = 1; m <= 12; m++)
                                {
                                    var isSelected = m == (int?)ViewData["CurrentMonth"];
                                    <option value="@m" selected="@isSelected">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                                }
                            </select>
                            <button id="filterButton" class="btn btn-primary ms-2" style="background-color: #4b0082; color: white; width: auto; margin-top:-25px; margin-left: 50px;">Filter</button>
                            <button id="resetButton" class="btn btn-secondary ms-2" style="background-color: #f0f0f0; color: black; width: auto; margin-top:-25px; margin-left: 10px;">Reset</button>
                        </div>
                    </div>
                    <div class="card-body" style="height: 800px;">
                        <canvas id="expensesChart" style="height: 400px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>
        <a asp-action="Index" class="btn" style="background-image: linear-gradient(to right, #4b0082, #9370DB); color: white; border: none; margin-top: 40px;">Back to List</a>
    </div>
</body>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        try {
            var yearlyData = JSON.parse('@Html.Raw(ViewData["YearlyCategoryData"])');

            // Get unique categories across all months
            var categories = [...new Set(yearlyData.flatMap(month =>
                month.categories.map(cat => cat.name)
            ))];

            // Prepare data for Chart.js
            var monthLabels = yearlyData.map(item => item.monthName);
            var datasets = categories.map((category, index) => {
                var color = generateColor(index);
                return {
                    label: category,
                    data: yearlyData.map(month => {
                        var categoryData = month.categories.find(cat => cat.name === category);
                        return categoryData ? categoryData.amount : 0;
                    }),
                    backgroundColor: `rgba(${color}, 0.7)`,
                    borderColor: `rgba(${color}, 1)`,
                    borderWidth: 1
                };
            });

            // Create the chart
            var ctx = document.getElementById('expensesChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: monthLabels,
                    datasets: datasets
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Month'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Amount'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                            onClick: function (e, legendItem, legend) {
                                const index = legendItem.datasetIndex;
                                const ci = legend.chart;
                                if (ci.isDatasetVisible(index)) {
                                    ci.hide(index);
                                    legendItem.hidden = true;
                                } else {
                                    ci.show(index);
                                    legendItem.hidden = false;
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    label += new Intl.NumberFormat('en-US', {
                                        style: 'currency',
                                        currency: 'USD'
                                    }).format(context.raw);
                                    return label;
                                }
                            }
                        }
                    },
                    barPercentage: 0.8,
                    categoryPercentage: 0.9
                }
            });

            // Year and Month filter functionality
            document.getElementById('filterButton').addEventListener('click', function () {
                var selectedYear = document.getElementById('yearSelect').value;
                var selectedMonth = document.getElementById('monthSelect').value;
                window.location.href = `?year=${selectedYear}&month=${selectedMonth}`;
            });

            // Reset functionality
            document.getElementById('resetButton').addEventListener('click', function () {
                window.location.href = `?year=${document.getElementById('yearSelect').value}&month=0`;
            });

        } catch (error) {
            console.error('Error creating chart:', error);
        }
    });

    function generateColor(index) {
        const colors = [
            '118, 217, 54',   // #76d936 (Bright Green)
            '234, 180, 212',  // #eab4d4 (Light Pink)
            '233, 210, 18',   // #e9d212 (Golden Yellow)
            '45, 117, 210',   // #2d75d2 (Blue)
            '74, 179, 181',   // #4ab3b5 (Teal)
            '255, 99, 132',   // #FF6384 (Coral)
            '255, 159, 64',   // #FF9F40 (Orange)
            '54, 162, 235',   // #36a2eb (Sky Blue)
            '153, 102, 255',  // #9966ff (Purple)
            '75, 192, 192',   // #4bc0c0 (Light Teal)
            '255, 206, 86',   // #ffce56 (Yellow)
            '255, 159, 64',   // #ff9f40 (Orange)
            '255, 99, 71',    // #FF6347 (Tomato)
            '173, 216, 230',  // #ADD8E6 (Light Blue)
            '255, 105, 180'   // #FF69B4 (Hot Pink)
        ];
        return colors[index % colors.length];
    }
  
</script>
