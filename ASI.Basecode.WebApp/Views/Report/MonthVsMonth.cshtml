@{
    ViewData["Title"] = "Report Page";
}

<div class="page-container">
    <!-- Month Comparison Section -->
    
    <div class="col-12">
        <div class="card" style="width: 100%; height: 700px; border: none;">
                <div class="card-header" style="background-image: linear-gradient(to right, #4b0082, #9370DB); color: white; height: 60px;">
                    <h5 class="card-title mb-0">Month-to-Month Comparison</h5>
                    <div class="d-flex justify-content-end">
                        <select id="monthSelect" class="form-select me-2" style="width: auto; margin-top: -25px;">
                            @for (int m = 1; m <= 12; m++)
                            {
                                var isSelected = m == (int?)ViewData["CurrentMonth"];
                                <option value="@m" selected="@isSelected">
                                    @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)
                                </option>
                            }
                        </select>
                        <select id="compareMonthSelect" class="form-select me-2" style="width: auto; margin-top: -25px;">
                            @for (int m = 1; m <= 12; m++)
                            {
                                var isSelected = m == (int?)ViewData["CompareMonth"];
                                <option value="@m" selected="@isSelected">
                                    @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)
                                </option>
                            }
                        </select>
                        <select id="yearSelect" class="form-select" style="width: auto; margin-top: -25px;">
                            @for (int y = DateTime.Now.Year; y >= 2000; y--)
                            {
                                var isSelected = y == (int?)ViewData["CurrentYear"];
                                <option value="@y" selected="@isSelected">@y</option>
                            }
                        </select>
                        <button id="compareButton" class="btn" style="background-color: #4b0082; color: white; width: auto; margin-top: -25px; margin-left: 50px;">Compare</button>
                    </div>
                </div>
                <div class="card-body" style="height: 100%; padding: 5;">
                    <canvas id="comparisonChart" style="width: 95% !important; height: 100% !important;"></canvas>
                </div>
        </div>
    </div>
    
</div>

<div style="display: flex; justify-content: center; margin-top: 40px;">
    <a asp-action="Index" class="btn" style="background-image: linear-gradient(to right, #4b0082, #9370DB); color: white; border: none;">Back to List</a>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        try {
            var categoryData = JSON.parse('@Html.Raw(ViewData["CategoryData"])');
            var monthlyCategoryData = JSON.parse('@Html.Raw(ViewData["MonthlyCategoryData"])');
            var comparisonData = JSON.parse('@Html.Raw(ViewData["ComparisonData"])');

            // Comparison Chart
            if (comparisonData && comparisonData.length > 0) {
                var comparisonLabels = comparisonData.map(item => item.name);
                var currentMonthData = comparisonData.map(item => item.currentAmount);
                var compareMonthData = comparisonData.map(item => item.compareAmount);

                var comparisonCtx = document.getElementById('comparisonChart').getContext('2d');
                new Chart(comparisonCtx, {
                    type: 'bar',
                    data: {
                        labels: comparisonLabels,
                        datasets: [
                            {
                                label: document.getElementById('monthSelect').options[document.getElementById('monthSelect').selectedIndex].text,
                                data: currentMonthData,
                                backgroundColor: 'rgba(118, 217, 54, 1)', // Bright Green (#76d936)
                                borderWidth: 0 // No border
                            },
                            {
                                label: document.getElementById('compareMonthSelect').options[document.getElementById('compareMonthSelect').selectedIndex].text,
                                data: compareMonthData,
                                backgroundColor: 'rgba(234, 180, 212, 1)', // Light Pink (#eab4d4)
                                borderWidth: 0 // No border
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false, // Ensures it uses 100% height and width
                        scales: {
                            y: { beginAtZero: true }
                        },
                        plugins: {
                            legend: { display: true },
                            title: {
                                display: true,
                                text: 'Month-to-Month Expense Comparison by Category'
                            }
                        }
                    }
                });
            }

            // Comparison Filter Button
            document.getElementById('compareButton').addEventListener('click', function () {
                var selectedYear = document.getElementById('yearSelect').value;
                var selectedMonth = document.getElementById('monthSelect').value;
                var compareMonth = document.getElementById('compareMonthSelect').value;
                window.location.href = `?year=${selectedYear}&month=${selectedMonth}&compareMonth=${compareMonth}`;
            });

        } catch (error) {
            console.error('Error creating charts:', error);
        }
    });
</script>