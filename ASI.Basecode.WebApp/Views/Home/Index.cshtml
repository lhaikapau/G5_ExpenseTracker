@{
    ViewData["Title"] = "Home Page";
}

<body class="index-body">
    <div class="homepage-container">
        <div class="text-center">
            <h1 class="home-display-4">Welcome!</h1>
        </div>

        <!-- Total Expense & Average Monthly Expense -->
        <div class="row">
            <!-- Total Expense Box -->
            <div class="col-md-3">
                <div class="d-flex flex-row widget summary expense border rounded p-4"
                     style="background-image: linear-gradient(to right, #483D8B, #9370DB); color: white; min-height: 140px">
                    <div class="d-flex flex-column justify-content-center me-3">
                    </div>
                    <div class="d-flex flex-column m-auto">
                        <span class="lead">Total Expense</span>
                        <h1 class="display-6 fw-bold">₱@ViewData["TotalAmount"]</h1>
                    </div>
                </div>
            </div>

            <!-- Average Monthly Expense Box -->
            <div class="col-md-5">
                <div class="d-flex flex-row widget summary expense border rounded p-4"
                     style="background-image: linear-gradient(to right, #4b0082, #9370DB); color: white; min-height: 140px;">
                    <div class="d-flex flex-column justify-content-center me-3">
                        <i class="fas fa-calendar-month fa-2xl"></i>
                    </div>
                    <div class="d-flex flex-column m-auto">
                        <span class="lead">Average Monthly Expense</span>
                        <h1 class="display-6 fw-bold">₱@ViewData["AverageMonthlyExpense"]</h1>
                    </div>
                </div>
            </div>
        </div>

        <!-- Category Breakdown Section with Donut Chart -->
        <div class="row mt-4">
            <div class="col-md-6">
                @if (ViewData["CategoryData"] != null)
                {
                    <div class="card">
                        <div class="card-body">
                            <canvas id="donutChart" style="height: 350px;"></canvas>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">No expense data available to display.</div>
                }
            </div>

            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Category Breakdown</h5>
                    </div>
                    <div class="card-body">
                        <div id="categoryList" class="list-group scrollable-list">
                            <!-- Categories will be populated by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            try {
                var categoryData = JSON.parse('@Html.Raw(ViewData["CategoryData"])');

                if (!categoryData || categoryData.length === 0) {
                    console.log('No data available for chart');
                    return;
                }

                var labels = categoryData.map(item => item.name);
                var dataValues = categoryData.map(item => item.amount);
                var colors = generateColors(categoryData.length);

                // Create the donut chart
                var ctx = document.getElementById('donutChart').getContext('2d');
                var donutChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: dataValues,
                            backgroundColor: colors.map(color => `rgba(${color}, 1)`), // Solid colors with full opacity
                            borderWidth: 0  // Remove border for solid colors
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: true // Display legend to show category names and amounts
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        var label = tooltipItem.label || '';
                                        var amount = tooltipItem.raw || 0;
                                        return label + ': ₱' + amount.toLocaleString();
                                    }
                                }
                            },
                            title: {
                                display: true,
                                text: 'Expenses by Category',
                                font: {
                                    size: 25, // Adjust font size
                                    family: 'Arial, sans-serif', // Change font family
                                },
                                color: '#483D8B', // Set text color
                                padding: {
                                    top: 10,  // Move title 10px from the top of the chart area
                                    bottom: 20
                                }
                            }
                        }
                    }
                });

                // Populate category list
                var categoryList = document.getElementById('categoryList');
                categoryData.forEach((category, index) => {
                    var color = `rgba(${colors[index]}, 0.2)`;
                    var borderColor = `rgba(${colors[index]}, 1)`;

                    var listItem = document.createElement('div');
                    listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                    listItem.style.borderLeft = `4px solid ${borderColor}`;

                    listItem.innerHTML = `
                    <div>
                        <h6 class="mb-0">${category.name}</h6>
                        <small class="text-muted">₱${category.amount.toLocaleString()}</small>
                    </div>
                    <span class="badge rounded-pill" style="background-color: #4b0082; color: white;">${category.percentage.toFixed(1)}%</span>
                `;

                    categoryList.appendChild(listItem);
                });

            } catch (error) {
                console.error('Error creating chart:', error);
            }

        });

        function generateColors(count) {
              var colors = [
        '118, 217, 54',   // #76d936 (Bright Green)
        '234, 180, 212',  // #eab4d4 (Light Pink)
        '233, 210, 18',   // #e9d212 (Golden Yellow)
        '45, 117, 210',   // #2d75d2 (Blue)
        '74, 179, 181',   // #4ab3b5 (Teal)
        '230, 230, 250',  // #e6e6fa (Lavender)
        '255, 99, 132',   // #FF6384 (Coral)
        '255, 159, 64',   // #FF9F40 (Orange)
        '54, 162, 235',   // #36a2eb (Sky Blue)
        '153, 102, 255',  // #9966ff (Purple)
        '75, 192, 192',   // #4bc0c0 (Light Teal)
        '255, 206, 86',   // #ffce56 (Yellow)
        '255, 159, 64',   // #ff9f40 (Orange)
        '255, 99, 71',    // #FF6347 (Tomato)
        '173, 216, 230',  // #ADD8E6 (Light Blue)
        '255, 105, 180',  // #FF69B4 (Hot Pink)
        '244, 164, 96',   // #F4A460 (Sandy Brown)
        '0, 255, 127',    // #00FF7F (Spring Green)
        '255, 105, 180',  // #FF69B4 (Hot Pink)
        '238, 130, 238'   // #EE82EE (Violet)
    ];

            while (colors.length < count) {
                // Loop back to start if there are more categories than predefined colors
                colors.push(colors[colors.length % colors.length]);
            }

            return colors;
        }
    </script>
</body>
