@model IEnumerable<ASI.Basecode.Services.ServiceModels.CategoryViewModel>

@{
    ViewData["Title"] = "Category Page";
    int currentPage = ViewData["CurrentPage"] as int? ?? 1;
    int totalPages = ViewData["TotalPages"] as int? ?? 1;

}
<div class="page-container">
    <h1>Categories</h1>
    <hr />
    <p>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createCategoryModal"> Create New </button>
    </p>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)  // Assuming Categories is a list in the CategoryViewModel
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="text-center">
                            <button class="btn btn-sm btn-warning" data-toggle="modal" data-target="#editCategoryModal" 
                            data-id="@item.CategoryId" 
                            data-name="@item.Name" 
                            data-description="@item.Description">Edit</button>
                        @Html.ActionLink("Delete", "Delete", new { CategoryId = item.CategoryId }, new { @class = "btn btn-sm btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
  
  <nav aria-label="Page navigation">
    <ul class="pagination">
        @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)">Previous</a>
            </li>
        }

        @for (int i = 1; i <= totalPages; i++)
        {
            if (i <= 3 || i > totalPages - 3 || (i >= currentPage - 2 && i <= currentPage + 2))
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                </li>
            }
            else if (i == 4 || i == totalPages - 3)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
        }

        @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)">Next</a>
            </li>
        }

        <!-- Last Page link -->
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@totalPages">Last</a>
            </li>
        }
    </ul>
</nav>

</div>
   
@{
    await Html.RenderPartialAsync("Create", new ASI.Basecode.Services.ServiceModels.CategoryViewModel());
    await Html.RenderPartialAsync("Edit", new ASI.Basecode.Services.ServiceModels.CategoryViewModel());
}

@section Scripts {
    <script>
       $(document).ready(function () {
        $('#editCategoryModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var id = button.data('id'); // Extract info from data-* attributes
            var name = button.data('name');
            var description = button.data('description');

              console.log(id, name, description); 


            // Update the modal's content.
            var modal = $(this);
            modal.find('input[name="CategoryId"]').val(id);
            modal.find('input[name="Name"]').val(name);
            modal.find('input[name="Description"]').val(description);
        });
    });
    </script>
}

