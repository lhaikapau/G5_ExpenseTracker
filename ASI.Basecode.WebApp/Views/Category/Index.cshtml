@model IEnumerable<ASI.Basecode.Services.ServiceModels.CategoryViewModel>

@{
    ViewData["Title"] = "Category Page";
}
<div class="page-container">
    <h1>Categories</h1>
    <hr />
    <p>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createCategoryModal"> Create New </button>
    </p>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)  // Assuming Categories is a list in the CategoryViewModel
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="text-center">
                            <button class="btn btn-warning" data-toggle="modal" data-target="#editCategoryModal" 
                            data-id="@item.CategoryId" 
                            data-name="@item.Name" 
                            data-description="@item.Description">Edit</button>
                        @Html.ActionLink("Delete", "Delete", new { CategoryId = item.CategoryId }, new { @class = "btn btn-sm btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    await Html.RenderPartialAsync("Create", new ASI.Basecode.Services.ServiceModels.CategoryViewModel());
    await Html.RenderPartialAsync("Edit", new ASI.Basecode.Services.ServiceModels.CategoryViewModel());
}

@section Scripts {
    <script>
       $(document).ready(function () {
        $('#editCategoryModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var id = button.data('id'); // Extract info from data-* attributes
            var name = button.data('name');
            var description = button.data('description');

              console.log(id, name, description); 

            // Update the modal's content.
            var modal = $(this);
            modal.find('input[name="CategoryId"]').val(id);
            modal.find('input[name="Name"]').val(name);
            modal.find('input[name="Description"]').val(description);
        });
    });
    </script>
}