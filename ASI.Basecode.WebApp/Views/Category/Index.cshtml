@model IEnumerable<ASI.Basecode.Services.ServiceModels.CategoryViewModel>

@{
    ViewData["Title"] = "Category Page";
    int currentPage = ViewData["CurrentPage"] as int? ?? 1;
    int totalPages = ViewData["TotalPages"] as int? ?? 1;

}

<body style="background-color: #B3ACDB;">
    <div class="page-container" style="background-color: #F0F0F7; border: 4px solid #9370DB; max-height: 950px;width:1750px; border-radius: 10px; margin-left: 13px;padding: 20px; position: relative; top: 35px;">
        <h1 class="category-display animated fadeIn" style="color: #4b0082;">Category</h1>

        <hr />
        <p>
            <button type="button" class="btn" style="background-image: linear-gradient(to right, #4b0082, #9370DB); color: white;; color: white; margin-left: 700px;" data-toggle="modal" data-target="#createCategoryModal">Create New</button>

        </p>
        <div style="width: 100%; height: 600px; overflow-y: auto;">
            <div class="mb-3">
                <input type="text" id="searchInput" class="form-control" placeholder="Search categories..."
                       style="border: 2px solid #9370DB; border-radius: 5px;">
            </div>

            <table  id="categoryTable" class="table table-bordered table-hover" style="background-color: white; margin-top: -5px; width:100%;">
                <thead style="background-color: #483D8B !important; color: white !important;">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Name)</th>
                        <th>@Html.DisplayNameFor(model => model.Description)</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody style="background-color: white; color: black;">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td class="text-center">
                                <div style="display: flex; gap: 10px; align-items: center; justify-content: center;">
                                    <button class="btn btn-warning" data-toggle="modal" data-target="#editCategoryModal" data-id="@item.CategoryId" data-name="@item.Name" data-description="@item.Description">
                                        Edit
                                    </button>
                                    @Html.ActionLink("Delete", "Delete", new { CategoryId = item.CategoryId }, new { @class = "btn btn-sm", style = "background-color: #C14444; color: white; height: 38px; display: flex; justify-content: center; align-items: center;" })
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= totalPages; i++)
                {
                    if (i <= 3 || i > totalPages - 3 || (i >= currentPage - 2 && i <= currentPage + 2))
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }
                    else if (i == 4 || i == totalPages - 3)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)">Next</a>
                    </li>
                }

                <!-- Last Page link -->
                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@totalPages">Last</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</body>

@{
    await Html.RenderPartialAsync("Create", new ASI.Basecode.Services.ServiceModels.CategoryViewModel());
    await Html.RenderPartialAsync("Edit", new ASI.Basecode.Services.ServiceModels.CategoryViewModel());
}
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#editCategoryModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var id = button.data('id'); // Extract info from data-* attributes
                var name = button.data('name');
                var description = button.data('description');

                console.log(id, name, description);


                // Update the modal's content.
                var modal = $(this);
                modal.find('input[name="CategoryId"]').val(id);
                modal.find('input[name="Name"]').val(name);
                modal.find('input[name="Description"]').val(description);
            });
            // Debounce function
            function debounce(func, wait) {
                let timeout;
                return function (...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            // Handle search input
            $('#searchInput').on('input', debounce(function () {
                const searchTerm = $(this).val() || '';

                $.ajax({
                    url: '/Category/Search',
                    type: 'GET',
                    data: { term: searchTerm },
                    success: function (data) {
                        const tbody = $('#categoryTable tbody');
                        tbody.empty();

                        if (data && data.length > 0) {
                            data.forEach(function (item) {
                                const row = `
                                            <tr>
                                                <td>${item.name || ''}</td>
                                                <td>${item.description || ''}</td>
                                                <td class="text-center">
                                                    <div style="display: flex; gap: 10px; align-items: center; justify-content: center;">
                                                        <button class="btn btn-warning" data-toggle="modal"
                                                                data-target="#editCategoryModal"
                                                                data-id="${item.categoryId}"
                                                                data-name="${item.name || ''}"
                                                                data-description="${item.description || ''}">
                                                            Edit
                                                        </button>
                                                        <a href="/Category/Delete/${item.categoryId}"
                                                           class="btn btn-sm"
                                                           style="background-color: #C14444; color: white; height: 38px; display: flex; justify-content: center; align-items: center;">
                                                            Delete
                                                        </a>
                                                    </div>
                                                </td>
                                            </tr>
                                        `;
                                tbody.append(row);
                            });
                        } else {
                            tbody.append('<tr><td colspan="3" class="text-center">No results found</td></tr>');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Search error:', error);
                        const tbody = $('#categoryTable tbody');
                        tbody.empty();
                        tbody.append('<tr><td colspan="3" class="text-center">Error occurred while searching</td></tr>');
                    }
                });
            }, 300));
        });
    </script>
}
